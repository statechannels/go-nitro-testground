name: Go

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.18.0"
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3.1.0
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.45.2
      
      - name: Run staticcheck # see: staticcheck.io
        uses: dominikh/staticcheck-action@v1.2.0
        with:
          version: "2022.1.2"
          install-go: false
          min-go-version: 1.18

      - name: Build
        run: go build -v ./...

      - name: Tidy
        run: go mod tidy

      - name: check git tree is clean
        # This will fail the job if any previous step (re)generated a file
        # that doesn't match what you checked in (or forgot to check in)
        run: git diff --exit-code


  test:
    runs-on: ubuntu-latest
    steps:
    
      - name:  restore tg install cache
        uses: actions/cache@v3
        id: install-cache
        with:
          path:  ~/testground
          key: tg-install

      - name:  restore tg code cache
        uses: actions/cache@v3
        id: code-cache
        with:
          path:  ./tg_src
          key: tg-code

      - name: Checkout testplan
        uses: actions/checkout@v2

      - name: Checkout testground
        uses: actions/checkout@v3
        with:
            repository: statechannels/testground
            path: ./tg_src

      - uses: actions/setup-go@v3
        with:
          go-version: "^1.18.0"

     
      - name: docker cache
        uses: satackey/action-docker-layer-caching@v0.0.11
      
      - name: Build the Docker image
        run: 	docker build --build-arg TG_VERSION=cfcdb3afb9922e2c811fc981ca07ecd42d3736f3 -t iptestground/testground:edge -f ./tg_src/Dockerfile.testground .

      - name: Import test to testground
        run: testground plan import --from  ../go-nitro-testground

      - name: Start testground
        run: testground daemon &
       
      - name: Run testground test
        run:  testground run s -p=go-nitro-testground -t=virtual-payment -b=exec:go -r=local:exec -tp=numOfHubs=1 -i=3 -tp=paymentTestDuration=2 -tp=concurrentPaymentJobs=1  --wait